setopt EXTENDED_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt PROMPT_SP
setopt PROMPT_SUBST
setopt SHARE_HISTORY

if [[ -n "${XDG_CACHE_HOME}" ]]; then
  HISTFILE="${XDG_CACHE_HOME}/zsh/history"
  mkdir -p "${HISTFILE:h}"
else
  HISTFILE=~/.zsh_history
fi
HISTSIZE=10000
SAVEHIST=$((HISTSIZE/2))
bindkey -e

cdpath=(
  .
  {{ if ne "" .github.user }}"${HOME}/src/github.com/{{ .github.user }}"{{ end }}
  {{ if ne "" .github.org }}"${HOME}/src/github.com/{{ .github.org }}"{{ end }}
  ${cdpath}
)
fpath=(
  "${HOME}/.local/share/zsh-completions"
  '{{ .homebrew.prefix }}/share/zsh-completions'
  '{{ .homebrew.prefix }}/share/zsh/site-functions'
  ${fpath}
)
manpath=(
  '{{ .homebrew.prefix }}/share/man'
  {{ if eq .chezmoi.os "darwin" }}/Library/Developer/CommandLineTools/usr/share/man{{ end }}
  ${manpath}
)
path=(
  '{{ .homebrew.prefix }}/bin'
  '{{ .homebrew.prefix }}/sbin'
  ${path}
)
if [[ -d '{{ .homebrew.prefix }}/opt/ruby' ]]; then
  path=( '{{ .homebrew.prefix }}/opt/ruby/bin' ${path} )
  path=( "$(gem env gemdir)/bin" ${path} )
fi
path=(
  ~/.local/bin
  "$(python3 -msite --user-base)/bin"
  ${path}
)

autoload -Uz compinit && compinit
autoload -Uz +X bashcompinit && bashcompinit

autoload -U colors
colors

# autoload -Uz bracketed-paste-magic
# zle -N bracketed-paste bracketed-paste-magic

# autoload -Uz url-quote-magic
# zle -N self-insert url-quote-magic

for config_file (~/.zshrc.d/*.zsh); do
  source "${config_file}"
done

if (( $+commands[aws_completer] )); then
  complete -o nospace -C "${commands[aws_completer]}" aws
fi
if (( $+commands[kubectl] )); then
  source <("${commands[kubectl]}" completion zsh)
fi
if (( $+commands[terraform] )); then
  complete -o nospace -C "${commands[terraform]}" terraform
fi
if (( $+commands[terramate] )); then
  complete -o nospace -C "${commands[terramate]}" terramate
fi

export CLICOLOR=1
export EDITOR=nvim
export PROMPT_EOL_MARK='%F{1}⏎%f'
export VISUAL=nvim

alias diff='command diff -W ${COLUMNS} -x .terraform -d'
alias glow='command glow -w ${COLUMNS}'
alias k=kubectl
alias k9s='command k9s --headless --logoless --readonly'
alias kubectl=kubecolor
alias pstree='command pstree -g 2'
alias sdiff='command sdiff -w ${COLUMNS} -d'
alias vi=nvim
alias vim=nvim

compdef k=kubectl
compdef kubecolor=kubectl

#comp_files=()
#comp_files+=({{ .homebrew.prefix }}/etc/bash_completion.d/npm)
##comp_files+=({{ .homebrew.prefix }}/etc/bash_completion.d/vagrant)
#
#for f in ${comp_files}; do
#  [[ -f "${f}" ]] && source "${f}"
#done

if [[ "${TERM_PROGRAM}" = Apple_Terminal ]]; then
  _update_terminal_cwd() {
    local url_path=''
    {
      local LC_CTYPE=C LC_ALL= byte i ord
      for ((i = 0; i < ${#PWD}; ++i)); do
        byte="${PWD[i]}"
        if [[ "${byte}" =~ [/._~A-Za-z0-9-] ]]; then
          url_path+="${byte}"
        else
          ord=$(([#16] #byte))
          url_path+="%${ord}"
        fi
      done
    }
    printf '\e]7;%s\a' "file://${HOST}${url_path}"
  }
  typeset -ag chpwd_functions
  if [[ -z ${chpwd_functions[(r)_update_terminal_cwd]} ]]; then
    chpwd_functions+=_update_terminal_cwd
  fi
  _update_terminal_cwd
fi

zle_highlight=('paste:none')

# Do at end.
if [[ -e {{ .homebrew.prefix }}/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
  source {{ .homebrew.prefix }}/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# Do at end.
if [[ -e {{ .homebrew.prefix }}/share/zsh-fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh ]]; then
  source {{ .homebrew.prefix }}/share/zsh-fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
  if [[ $(uname) == Darwin ]]; then
    FAST_HIGHLIGHT[chroma-man]=
    FAST_HIGHLIGHT[chroma-whatis]=
  fi
elif [[ -e {{ .homebrew.prefix }}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
  source {{ .homebrew.prefix }}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Do at end.
if (( $+commands[starship] )); then
  eval "$(starship init zsh)"
fi

# Do at end.
if (( $+commands[direnv] )); then
  eval "$(direnv hook zsh)"
fi

unsetopt COMPLETE_ALIASES # FIXME: find where this is being set

# vim: ft=zsh.jinja2
