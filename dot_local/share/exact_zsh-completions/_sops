#compdef sops

function _sops() {
  local context curcontext=${curcontext} state line ret=1
  declare -A opt_args

  local -a commands=(
    'exec-env:execute a command with decrypted values inserted into the environment'
    'exec-file:execute a command with the decrypted contents as a temporary file'
    'publish:Publish sops file or directory to a configured destination'
    'keyservice:start a SOPS key service server'
    'groups:modify the groups on a SOPS file'
    'updatekeys:update the keys of a SOPS file using the config file'
    {help,h}:'Shows a list of commands or help for one command'
  )

  local -a _global_flags=(
    {--decrypt,-d}'[decrypt a file and output the result to stdout]'
    {--encrypt,-e}'[encrypt a file and output the result to stdout]'
    {--rotate,-r}'[generate a new data encryption key and reencrypt all values with the new key]'
    {--kms,-k}'[comma separated list of KMS ARNs \[$SOPS_KMS_ARN\]]'
    '--aws-profile[The AWS profile to use for requests to AWS]'
    '--gcp-kms[comma separated list of GCP KMS resource IDs \[$SOPS_GCP_KMS_IDS\]]'
    '--azure-kv[comma separated list of Azure Key Vault URLs \[$SOPS_AZURE_KEYVAULT_URLS\]]'
    "--hc-vault-transit[comma separated list of vault's key URI (e.g. 'https://vault.example.org:8200/v1/transit/keys/dev') \\[\$SOPS_VAULT_URIS\\]]"
    {--pgp,-p}'[comma separated list of PGP fingerprints \[$SOPS_PGP_FP\]]'
    {--age,-a}'[comma separated list of age recipients \[$SOPS_AGE_RECIPIENTS\]]'
    {--in-place,-i}'[write output back to the same file instead of stdout]'
    '--extract[extract a specific key or branch from the input document. Decrypt mode only.]'
    "--input-type[currently json, yaml, dotenv and binary are supported. If not set, sops will use the file's extension to determine the type]"
    "--output-type[currently json, yaml, dotenv and binary are supported. If not set, sops will use the input file's extension to determine the output format]"
    {--show-master-keys,-s}'[display master encryption keys in the file during editing]'
    '--add-gcp-kms[add the provided comma-separated list of GCP KMS key resource IDs to the list of master keys on the given file]'
    '--rm-gcp-kms[remove the provided comma-separated list of GCP KMS key resource IDs from the list of master keys on the given file]'
    '--add-azure-kv[add the provided comma-separated list of Azure Key Vault key URLs to the list of master keys on the given file]'
    '--rm-azure-kv[remove the provided comma-separated list of Azure Key Vault key URLs from the list of master keys on the given file]'
    '--add-kms[add the provided comma-separated list of KMS ARNs to the list of master keys on the given file]'
    '--rm-kms[remove the provided comma-separated list of KMS ARNs from the list of master keys on the given file]'
    "--add-hc-vault-transit[add the provided comma-separated list of Vault's URI key to the list of master keys on the given file (e.g. https://vault.example.org:8200/v1/transit/keys/dev)]"
    "--rm-hc-vault-transit[remove the provided comma-separated list of Vault's URI key from the list of master keys on the given file (e.g. https://vault.example.org:8200/v1/transit/keys/dev)]"
    '--add-age[add the provided comma-separated list of age recipients fingerprints to the list of master keys on the given file]'
    '--rm-age[remove the provided comma-separated list of age recipients from the list of master keys on the given file]'
    '--add-pgp[add the provided comma-separated list of PGP fingerprints to the list of master keys on the given file]'
    '--rm-pgp[remove the provided comma-separated list of PGP fingerprints from the list of master keys on the given file]'
    '--ignore-mac[ignore Message Authentication Code during decryption]'
    '--unencrypted-suffix[override the unencrypted key suffix.]'
    '--encrypted-suffix[override the encrypted key suffix. When empty, all keys will be encrypted, unless otherwise marked with unencrypted-suffix.]'
    '--unencrypted-regex[set the unencrypted key suffix. When specified, only keys matching the regex will be left unencrypted.]'
    '--encrypted-regex[set the encrypted key suffix. When specified, only keys matching the regex will be encrypted.]'
    '--config[path to sops config file. If set, sops will not search for the config file recursively.]'
    '--encryption-context[comma separated list of KMS encryption context key:value pairs]'
    '--set[set a specific key or branch in the input JSON or YAML document. value must be a json encoded string.]'
    '--shamir-secret-sharing-threshold[the number of master keys required to retrieve the data key with shamir (default: 0)]'
    '--verbose[Enable verbose logging output]'
    '--enable-local-keyservice[use local key service]'
    '--keyservice[Specify the key services to use in addition to the local one. Can be specified more than once. Syntax: protocol://address. Example: tcp://myserver.com:5000]'
    {--help,-h}'[show help]'
    {--version,-v}'[print the version]'
  )

  _arguments -C \
    "1: :{_describe 'sops command' commands}" \
    "${_global_flags[@]}" \
    '*:: :->args' \
    && ret=0

  case $words[1] in
    exec-env)
      _arguments \
        "--background[background the process and don't wait for it to complete]" \
        '--user[the user to run the command as]' \
        '--enable-local-keyservice[use local key service]' \
        '--keyservice[Specify the key services to use in addition to the local one. Can be specified more than once. Syntax: protocol://address. Example: tcp://myserver.com:5000]' \
        "${_global_flags[@]}"
      ;;

    exec-file)
      _arguments \
        "--background[background the process and don't wait for it to complete]" \
        '--no-fifo[use a regular file instead of a fifo to temporarily hold the decrypted contents]' \
        '--user[the user to run the command as]' \
        "--input-type[currently json, yaml, dotenv and binary are supported. If not set, sops will use the file's extension to determine the type]" \
        "--output-type[currently json, yaml, dotenv and binary are supported. If not set, sops will use the input file's extension to determine the output format]" \
        '--filename[filename for the temporarily file (default: tmp-file)]' \
        '--enable-local-keyservice[use local key service]' \
        '--keyservice[Specify the key services to use in addition to the local one. Can be specified more than once. Syntax: protocol://address. Example: tcp://myserver.com:5000]' \
        "${_global_flags[@]}"
      ;;

    publish)
      _arguments \
        {--yes,-y}'[pre-approve all changes and run non-interactively]' \
        '--omit-extensions[Omit file extensions in destination path when publishing sops file to configured destinations]' \
        '--recursive[If the source path is a directory, publish all its content recursively]' \
        '--verbose[Enable verbose logging output]' \
        '--enable-local-keyservice[use local key service]' \
        '--keyservice[Specify the key services to use in addition to the local one. Can be specified more than once. Syntax: protocol://address. Example: tcp://myserver.com:5000]' \
        "${_global_flags[@]}"
      ;;

    keyservice)
      _arguments \
        {--network,--net}"[network to listen on, e.g. 'tcp' or 'unix' (default: \"tcp\")]" \
        {--address,--addr}"[address to listen on, e.g. '127.0.0.1:5000' or '/tmp/sops.sock' (default: \"127.0.0.1:5000\")]" \
        '--prompt[Prompt user to confirm every incoming request]' \
        '--verbose[Enable verbose logging output]' \
        "${_global_flags[@]}"
      ;;

    groups)
      local -a groups_commands=(
        'add:add a new group to a SOPS files'
        'delete:delete a key group from a SOPS file'
      )

      _arguments \
        "1: :{_describe 'groups command' groups_commands}" \
        "${_global_flags[@]}" \
        '*:: :->args' \

      case $words[1] in
        add)
          _arguments \
            {--file,-f}'[the file to add the group to]' \
            '--pgp[the PGP fingerprints the new group should contain. Can be specified more than once]' \
            '--kms[the KMS ARNs the new group should contain. Can be specified more than once]' \
            '--aws-profile[The AWS profile to use for requests to AWS]' \
            '--gcp-kms[the GCP KMS Resource ID the new group should contain. Can be specified more than once]' \
            '--azure-kv[the Azure Key Vault key URL the new group should contain. Can be specified more than once]' \
            "--hc-vault-transit[the full vault path to the key used to encrypt/decrypt. Make you choose and configure a key with encryption/decryption enabled (e.g. 'https://vault.example.org:8200/v1/transit/keys/dev'). Can be specified more than once]" \
            '--age[the age recipient the new group should contain. Can be specified more than once]' \
            {--in-place,-i}'[write output back to the same file instead of stdout]' \
            '--shamir-secret-sharing-threshold[the number of master keys required to retrieve the data key with shamir (default: 0)]' \
            '--encryption-context[comma separated list of KMS encryption context key:value pairs]' \
            '--enable-local-keyservice[use local key service]' \
            '--keyservice[Specify the key services to use in addition to the local one. Syntax: protocol://address. Example: tcp://myserver.com:5000]' \
          ;;
        delete)
          _arguments \
            {--file,-f}'[the file to add the group to]' \
            {--in-place,-i}'[write output back to the same file instead of stdout]' \
            '--shamir-secret-sharing-threshold[the number of master keys required to retrieve the data key with shamir (default: 0)]' \
            '--enable-local-keyservice[use local key service]' \
            '--keyservice[Specify the key services to use in addition to the local one. Syntax: protocol://address. Example: tcp://myserver.com:5000]' \
          ;;
      esac
      ;;

    updatekeys)
      _arguments \
        {--yes,-y}'[pre-approve all changes and run non-interactively]' \
        '--enable-local-keyservice[use local key service]' \
        '--keyservice[Specify the key services to use in addition to the local one. Can be specified more than once. Syntax: protocol://address. Example: tcp://myserver.com:5000]' \
        "${_global_flags[@]}" \
        '*:files:_files'
      ;;

    help)
      _arguments "1: :{_describe 'command' commands}"
      ;;

    *)
      _arguments "*:file:_files"
      ;;
  esac

  return ret
}

_sops "$*"

# vim: ft=zsh
