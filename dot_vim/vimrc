set encoding=UTF-8
scriptencoding utf-8

filetype plugin indent on
syntax enable

set autoindent
set autoread
set background=dark
set backspace=indent,eol,start
set belloff=all
set complete-=i
set display+=lastline
set display+=truncate
set formatoptions+=j
set history=1000
set hlsearch
set incsearch
set ignorecase
set laststatus=2
set list
set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
set mouse=a
set nolangremap
set noshowmode
set nostartofline
set noswapfile
set nowrap
set nrformats-=octal
set number
set ruler
set scrolloff=2
set sessionoptions-=options
set showcmd
set showmatch
set sidescroll=1
set sidescrolloff=5
set signcolumn=yes
set smarttab
set spelllang=en_gb
set tabpagemax=50
set termguicolors
set ttimeout
set ttimeoutlen=100
set ttyfast
set viewoptions-=options
set viminfo-=!
set wildmenu
set wildoptions=pum

if executable('rg')
  set grepformat=%f:%l:%c:%m,%f:%l:%m
  set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
endif

let g:bash_is_sh = 1

let g:is_posix = 1

let g:markdown_fenced_languages = [
      \   'bash=sh',
      \   'gitconfig',
      \   'json',
      \   'sh',
      \   'terraform',
      \   'yaml',
      \   'zsh=sh',
      \ ]
let g:markdown_syntax_conceal = 0

let g:netrw_banner = 0

let g:vim_json_conceal = 0

let g:vim_markdown_conceal = 0
let g:vim_markdown_folding_disabled = 1

colorscheme tokyonight-night

if $TERM ==# 'xterm-ghostty'
  let &t_Cs = "\e[4:3m"
  let &t_Ce = "\e[4:0m"
  highlight SpellBad cterm=undercurl term=underline
else
  highlight SpellBad cterm=underline term=underline
endif

if executable('ansible-vault')
  function AnsibleVaultDecrypt()
    let s:header = split(getline(1), ';')
    let b:ansible_vault_id = len(s:header) > 3 ? s:header[3] : 'default'
    silent %!ansible-vault decrypt
  endfunction

  function AnsibleVaultEncrypt()
    execute 'silent %!ansible-vault encrypt --encrypt-vault-id='.b:ansible_vault_id
  endfunction

  augroup ansible-vault
    autocmd!
    autocmd BufReadPre,FileReadPre */ansible/**/vault.yml setlocal nobackup noswapfile noundofile viminfo=
    autocmd BufReadPre,FileReadPre */group_vars/*/vault.yml setlocal nobackup noswapfile noundofile viminfo=
    autocmd BufReadPre,FileReadPre */host_vars/*/vault.yml setlocal nobackup noswapfile noundofile viminfo=
    autocmd BufReadPre,FileReadPre */vars/vault.yml setlocal nobackup noswapfile noundofile viminfo=
    autocmd BufReadPost,FileReadPost */group_vars/*/vault.yml call AnsibleVaultDecrypt()
    autocmd BufReadPost,FileReadPost */host_vars/*/vault.yml call AnsibleVaultDecrypt()
    autocmd BufReadPost,FileReadPost */vars/vault.yml call AnsibleVaultDecrypt()
    autocmd BufWritePre,FileWritePre */group_vars/*/vault.yml call AnsibleVaultEncrypt()
    autocmd BufWritePre,FileWritePre */host_vars/*/vault.yml call AnsibleVaultEncrypt()
    autocmd BufWritePre,FileWritePre */vars/vault.yml call AnsibleVaultEncrypt()
    autocmd BufWritePost,FileWritePost */ansible/**/vault.yml silent undo
    autocmd BufWritePost,FileWritePost */group_vars/*/vault.yml silent undo
    autocmd BufWritePost,FileWritePost */host_vars/*/vault.yml silent undo
    autocmd BufWritePost,FileWritePost */vars/vault.yml silent undo
  augroup END
endif
